{"version":3,"file":"static/js/641.b62d64ad.chunk.js","mappings":"kTAqBaA,EAAc,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,eAAgBC,EAAgB,EAAhBA,UAC5C,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GACEC,EAAAA,EAAAA,eADMC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,mBAAoBC,EAAtC,EAAsCA,cAAeC,EAArD,EAAqDA,YAG/CC,EAAqB,SAACC,EAAIC,GAG9B,OAFAR,EAAaO,GAELC,GACN,IAAK,SACH,OAAOL,EAAmBI,GAAIE,SAAQ,kBAAMT,EAAa,KAAnB,IACxC,IAAK,OACH,OAAOK,EAAYE,GACrB,QACEG,EAAAA,GAAAA,KAxBqB,wBA0B1B,EAED,OAAKR,EAASS,QAGZ,SAAC,EAAAC,MAAD,CAAOC,UAAU,OAAjB,UACE,SAAC,EAAAC,KAAD,UACGZ,EAASa,KAAI,YAA2B,IAAxBR,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMQ,EAAa,EAAbA,OACnBC,EAAY,UAAUC,KAAKd,IAAkBL,IAAcQ,EAEjE,OACE,UAAC,EAAAY,KAAD,CAEEC,OAAQvB,EAFV,WAKE,SAAC,EAAAwB,OAAD,UAASb,KACT,SAAC,EAAAa,OAAD,UAASL,KACT,SAAC,EAAAK,OAAD,UACGJ,GACC,UAAC,EAAAK,WAAD,YACE,SAAC,EAAAC,aAAD,CAAcC,MAAO,KAAM,kBAI7B,SAAC,EAAAC,SAAD,CACEC,MAAOC,EAAAA,aACPP,OAAQxB,EACRgC,SAAUrB,EACVsB,QAASvB,QAjBVC,EAuBV,QAjCsB,IAqC9B,C,0MCxEYO,EAAOgB,EAAAA,EAAAA,GAAH,iKAUJX,EAAOW,EAAAA,EAAAA,GAAH,uEACbC,EAAAA,EAAAA,cAAa,mCACL,gBAAGX,EAAH,EAAGA,OAAH,OAAgBY,EAAAA,EAAAA,cAAaZ,EAA7B,IAICC,EAASS,EAAAA,EAAAA,KAAH,+FACfC,EAAAA,EAAAA,iBAMST,EAAaQ,EAAAA,EAAAA,IAAH,8LACnBC,EAAAA,EAAAA,cAAa,Y,gHCpBJN,EAAW,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAOE,EAAgC,EAAhCA,SAAUR,EAAsB,EAAtBA,OAAQS,EAAc,EAAdA,QAClD,OACE,SAAC,EAAAI,aAAD,CAAcb,OAAQA,EAAtB,SACGc,OAAOC,QAAQT,GAAOX,KAAI,YAAmB,IAAD,eAAhBP,EAAgB,KAAV4B,EAAU,KAC3C,OACE,SAAC,EAAAC,QAAD,WACE,SAAC,EAAAC,WAAD,CACEC,KAAK,SACLC,OAAOC,EAAAA,EAAAA,KAAIjC,GACXqB,QAAS,kBAAMA,EAAQD,EAAUpB,EAAKkC,oBAA7B,EAHX,UAKE,SAACN,EAAD,CAAMO,KAAK,YANDnC,EAUjB,KAGN,C,uLCtBYyB,EAAeH,EAAAA,EAAAA,GAAH,sFACrBC,EAAAA,EAAAA,cAAa,aACL,gBAAGX,EAAH,EAAGA,OAAH,OAAgBY,EAAAA,EAAAA,cAAaZ,IAAW,MAAxC,IAKCiB,EAAUP,EAAAA,EAAAA,GAAH,yCAIPQ,GAAaR,EAAAA,EAAAA,GAAOc,EAAAA,WAAPd,CAAH,oI,sFCbVH,EAAe,CAC1BkB,KAAMC,EAAAA,SACNC,OAAQC,EAAAA,W,+HCFGzB,EAAe,SAAC,GAAD,QAAGC,MAAAA,OAAH,MAAW,GAAX,EAAkByB,GAAlB,mBAC1B,SAAC,MAAD,QACEC,YAAY,QACZC,YAAY,IACZC,kBAAkB,OAClB5B,MAAOA,EACP6B,SAAS,GACLJ,GAPoB,C","sources":["components/ContactList/ContactList.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/Controls/Controls.jsx","components/ContactList/Controls/Controls.styled.jsx","components/ContactList/controlsData.js","components/SpinnerLines/SpinnerLines.jsx"],"sourcesContent":["import { useContacts } from 'redux/hooks';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { string, oneOfType, number } from 'prop-types';\nimport { Block } from 'styles/shared';\nimport { Controls } from './Controls/Controls';\nimport { controlsData } from './controlsData';\nimport { List, Item, Column } from './ContactList.styled';\nimport { Processing } from './ContactList.styled';\nimport { SpinnerLines } from 'components/SpinnerLines/SpinnerLines';\n\nconst ACTION_NOT_SUPPORTED = 'Action not supported';\n\n// const deletedItemStyle = {\n//   backgroundColor: 'rgb(255 0 0 / 0.1)',\n// };\n\n//\n// ContactList\n//\n\nexport const ContactList = ({ controlsHeight, rowHeight }) => {\n  const [clickedId, setClickedId] = useState(null);\n  const { filtered, deleteContactAsync, pendingAction, setEditedId } =\n    useContacts();\n\n  const handleControlClick = (id, name) => {\n    setClickedId(id);\n\n    switch (name) {\n      case 'delete':\n        return deleteContactAsync(id).finally(() => setClickedId(null));\n      case 'edit':\n        return setEditedId(id);\n      default:\n        toast.warn(ACTION_NOT_SUPPORTED);\n    }\n  };\n\n  if (!filtered.length) return null;\n\n  return (\n    <Block maxHeight=\"70vh\">\n      <List>\n        {filtered.map(({ id, name, number }) => {\n          const isDeleted = /delete/i.test(pendingAction) && clickedId === id;\n\n          return (\n            <Item\n              key={id}\n              height={rowHeight}\n              // style={isDeleted ? deletedItemStyle : null}\n            >\n              <Column>{name}</Column>\n              <Column>{number}</Column>\n              <Column>\n                {isDeleted ? (\n                  <Processing>\n                    <SpinnerLines width={20} />\n                    Deleting...\n                  </Processing>\n                ) : (\n                  <Controls\n                    items={controlsData}\n                    height={controlsHeight}\n                    targetId={id}\n                    onClick={handleControlClick}\n                  />\n                )}\n              </Column>\n            </Item>\n          );\n        })}\n      </List>\n    </Block>\n  );\n};\n\nContactList.propTypes = {\n  rowHeight: oneOfType([string, number]),\n};\n","import styled from '@emotion/styled';\nimport { FlexCentered } from 'styles/shared';\nimport { calcCSSValue } from 'utils';\n\nexport const List = styled.ul`\n  @media screen and (max-width: 400px) {\n    font-size: 12px;\n  }\n\n  & > li:nth-of-type(odd) {\n    background-color: #f0f0f0;\n  }\n`;\n\nexport const Item = styled.li`\n  ${FlexCentered('justify-content: space-between')};\n  height: ${({ height }) => calcCSSValue(height)};\n  padding-left: 10px;\n`;\n\nexport const Column = styled.span`\n  ${FlexCentered()};\n  flex-basis: 33.33%;\n  height: 100%;\n  text-align: center;\n`;\n\nexport const Processing = styled.div`\n  ${FlexCentered('gap: 4px')};\n  height: 100%;\n  font-size: 11px;\n  color: rgb(0 0 0 / 0.8);\n  user-select: none;\n\n  @media screen and (min-width: 360px) {\n    font-size: 12px;\n  }\n`;\n","import { string, number, objectOf, oneOfType, func } from 'prop-types';\nimport { ControlsList, Control, ControlBtn } from './Controls.styled';\nimport { cap } from 'utils';\n\n//\n// Controls\n//\n\nexport const Controls = ({ items, targetId, height, onClick }) => {\n  return (\n    <ControlsList height={height}>\n      {Object.entries(items).map(([name, Icon]) => {\n        return (\n          <Control key={name}>\n            <ControlBtn\n              type=\"button\"\n              title={cap(name)}\n              onClick={() => onClick(targetId, name.toLocaleLowerCase())}\n            >\n              <Icon size=\"100%\" />\n            </ControlBtn>\n          </Control>\n        );\n      })}\n    </ControlsList>\n  );\n};\n\nControls.propTypes = {\n  onClick: func,\n  items: objectOf(func),\n  targetId: string,\n  height: oneOfType([string, number]),\n};\n","import styled from '@emotion/styled';\nimport { ButtonBase, FlexCentered } from 'styles/shared';\nimport { calcCSSValue } from 'utils';\n\nexport const ControlsList = styled.ul`\n  ${FlexCentered('gap: 5px')};\n  height: ${({ height }) => calcCSSValue(height) || '100%'};\n  width: 100%;\n  user-select: none;\n`;\n\nexport const Control = styled.li`\n  height: 100%;\n`;\n\nexport const ControlBtn = styled(ButtonBase)`\n  height: 100%;\n  color: #c5c5c5;\n\n  &:hover,\n  &:focus-visible {\n    color: var(--color-accent);\n  }\n`;\n","import { IconDelete, IconEdit } from 'styles/icons';\n\nexport const controlsData = {\n  edit: IconEdit,\n  delete: IconDelete,\n};\n","import { RotatingLines } from 'react-loader-spinner';\n\nexport const SpinnerLines = ({ width = 40, ...restProps }) => (\n  <RotatingLines\n    strokeColor=\"black\"\n    strokeWidth=\"3\"\n    animationDuration=\"0.75\"\n    width={width}\n    visible={true}\n    {...restProps}\n  />\n);\n"],"names":["ContactList","controlsHeight","rowHeight","useState","clickedId","setClickedId","useContacts","filtered","deleteContactAsync","pendingAction","setEditedId","handleControlClick","id","name","finally","toast","length","Block","maxHeight","List","map","number","isDeleted","test","Item","height","Column","Processing","SpinnerLines","width","Controls","items","controlsData","targetId","onClick","styled","FlexCentered","calcCSSValue","ControlsList","Object","entries","Icon","Control","ControlBtn","type","title","cap","toLocaleLowerCase","size","ButtonBase","edit","IconEdit","delete","IconDelete","restProps","strokeColor","strokeWidth","animationDuration","visible"],"sourceRoot":""}